// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Post from "./post.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_MapString from "bs-platform/lib/es6/belt_MapString.js";

function s(prim) {
  return prim;
}

function arr(prim) {
  return prim;
}

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* DeleteLater */0 :
        return {
                posts: state.posts,
                forDeletion: Belt_MapString.set(state.forDeletion, action._0.id, action._1)
              };
    case /* DeleteAbort */1 :
        return {
                posts: state.posts,
                forDeletion: Belt_MapString.remove(state.forDeletion, action._0.id)
              };
    case /* DeleteNow */2 :
        var post = action._0;
        return {
                posts: state.posts.filter(function (x) {
                      return Post.id(x) !== post.id;
                    }),
                forDeletion: Belt_MapString.remove(state.forDeletion, post.id)
              };
    
  }
}

var initialState = {
  posts: Post.examples,
  forDeletion: undefined
};

function PostFeed(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var posts = Belt_Array.map(state.posts, (function (x) {
          if (Belt_MapString.has(state.forDeletion, Post.id(x))) {
            return React.createElement("div", {
                        className: "relative bg-yellow-100 px-8 py-4 mb-4 h-40"
                      }, React.createElement("p", {
                            className: "text-center white mb-1"
                          }, "This post from " + x.title + " by " + x.author + " will be permanently removed in 10 seconds."), React.createElement("div", {
                            className: "flex justify-center"
                          }, React.createElement("button", {
                                className: "mr-4 mt-4 bg-yellow-500 hover:bg-yellow-900 text-white py-2 px-4",
                                onClick: (function (_mouseEvt) {
                                    clearTimeout(Belt_MapString.getExn(state.forDeletion, Post.id(x)));
                                    return Curry._1(dispatch, {
                                                TAG: /* DeleteAbort */1,
                                                _0: x
                                              });
                                  })
                              }, "Restore"), React.createElement("button", {
                                className: "mr-4 mt-4 bg-red-500 hover:bg-red-900 text-white py-2 px-4",
                                onClick: (function (_mouseEvt) {
                                    clearTimeout(Belt_MapString.getExn(state.forDeletion, Post.id(x)));
                                    return Curry._1(dispatch, {
                                                TAG: /* DeleteNow */2,
                                                _0: x
                                              });
                                  })
                              }, "Delete Immediately")), React.createElement("div", {
                            className: "bg-red-500 h-2 w-full absolute top-0 left-0 progress"
                          }));
          }
          var description = Belt_Array.map(x.text, (function (txt) {
                  return React.createElement("p", {
                              className: "mb-1 text-sm"
                            }, txt);
                }));
          return React.createElement("div", {
                      className: "bg-green-700 hover:bg-green-900 text-gray-300 hover:text-gray-100 px-8 py-4 mb-4"
                    }, React.createElement("h2", {
                          className: "text-2xl mb-1"
                        }, x.title), React.createElement("h3", {
                          className: "mb-4"
                        }, x.author), description, React.createElement("button", {
                          className: "mr-4 mt-4 bg-red-500 hover:bg-red-900 text-white py-2 px-4",
                          onClick: (function (_mouseEvt) {
                              return Curry._1(dispatch, {
                                          TAG: /* DeleteLater */0,
                                          _0: x,
                                          _1: setTimeout((function (param) {
                                                  Curry._1(dispatch, {
                                                        TAG: /* DeleteNow */2,
                                                        _0: x
                                                      });
                                                  console.log("Time up");
                                                  
                                                }), 10000)
                                        });
                            })
                        }, "Remove this post"));
        }));
  return React.createElement("div", {
              className: "max-w-3xl mx-auto mt-8 relative"
            }, posts);
}

var make = PostFeed;

export {
  s ,
  arr ,
  reducer ,
  initialState ,
  make ,
  
}
/* Post Not a pure module */
